package hospitalmanagement;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JButton;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

//These are the tools necessary for working with JSON, which is the model of our database.
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Iterator;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
/*

/*
* Class that displays the panel for the doctors appointments 
*/
public class DoctorAppointmentView extends JFrame {

	//this variable is used to determine which appointments are being displayed.
	//the appointments are displayed in pairs, we parse the JSON, check the first 2 entries, and display their information.
	//pageView correponds to first pair when 0, second pair when 1, etc.
	private int pageView = 0;
	private Account user;
	//The main panel of the "scene," where all components will be placed
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	/*public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DoctorAppointmentView frame = new DoctorAppointmentView();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}*/

	/**
	 * Create the frame.
	 */
	public DoctorAppointmentView() {
		
		//the json where the doctor's account is
		private JSONObject accountJSON = new JSONObject(ADDRESS);
		//the id of the doctor's account
		private String ID = user.getID();
		
		
		//Below are created the components that make up our panel, these are of course auto-generated by windows-builder
		//the event handlers of the components should be found scattered in the below code, such is the nature of working with windows b.
		//to identify which component is which, either refer to its name, which should be clear, or open the design to check.
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 587, 514);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel MainLabel = new JLabel("View Appointments");
		MainLabel.setBounds(252, 11, 154, 14);
		contentPane.add(MainLabel);
		
		JPanel Appointment1 = new JPanel();
		Appointment1.setBounds(123, 36, 347, 172);
		contentPane.add(Appointment1);
		GridBagLayout gbl_Appointment1 = new GridBagLayout();
		gbl_Appointment1.columnWidths = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		gbl_Appointment1.rowHeights = new int[]{0, 0, 0, 0, 0, 0, 0, 0};
		gbl_Appointment1.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_Appointment1.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		Appointment1.setLayout(gbl_Appointment1);
		
		JLabel PatientNameLabel = new JLabel("Patient:");
		GridBagConstraints gbc_PatientNameLabel = new GridBagConstraints();
		gbc_PatientNameLabel.insets = new Insets(0, 0, 5, 5);
		gbc_PatientNameLabel.gridx = 1;
		gbc_PatientNameLabel.gridy = 1;
		Appointment1.add(PatientNameLabel, gbc_PatientNameLabel);
		
		JLabel PatientName = new JLabel("Sohaib Bajwa");
		GridBagConstraints gbc_PatientName = new GridBagConstraints();
		gbc_PatientName.insets = new Insets(0, 0, 5, 5);
		gbc_PatientName.gridx = 3;
		gbc_PatientName.gridy = 1;
		Appointment1.add(PatientName, gbc_PatientName);
		
		JLabel AppointmentDateLabel = new JLabel("Date:");
		GridBagConstraints gbc_AppointmentDateLabel = new GridBagConstraints();
		gbc_AppointmentDateLabel.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentDateLabel.gridx = 1;
		gbc_AppointmentDateLabel.gridy = 2;
		Appointment1.add(AppointmentDateLabel, gbc_AppointmentDateLabel);
		
		JLabel AppointmentDate = new JLabel("03/03/03");
		GridBagConstraints gbc_AppointmentDate = new GridBagConstraints();
		gbc_AppointmentDate.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentDate.gridx = 3;
		gbc_AppointmentDate.gridy = 2;
		Appointment1.add(AppointmentDate, gbc_AppointmentDate);
		
		JLabel AppointmentTimeLabel = new JLabel("Time:");
		GridBagConstraints gbc_AppointmentTimeLabel = new GridBagConstraints();
		gbc_AppointmentTimeLabel.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentTimeLabel.gridx = 1;
		gbc_AppointmentTimeLabel.gridy = 3;
		Appointment1.add(AppointmentTimeLabel, gbc_AppointmentTimeLabel);
		
		JLabel AppointmentTime = new JLabel("10:20-10:40");
		GridBagConstraints gbc_AppointmentTime = new GridBagConstraints();
		gbc_AppointmentTime.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentTime.gridx = 3;
		gbc_AppointmentTime.gridy = 3;
		Appointment1.add(AppointmentTime, gbc_AppointmentTime);
		
		JLabel DepartmentLabel = new JLabel("Department:");
		GridBagConstraints gbc_DepartmentLabel = new GridBagConstraints();
		gbc_DepartmentLabel.insets = new Insets(0, 0, 5, 5);
		gbc_DepartmentLabel.gridx = 1;
		gbc_DepartmentLabel.gridy = 4;
		Appointment1.add(DepartmentLabel, gbc_DepartmentLabel);
		
		JLabel Department = new JLabel("Cardiology");
		GridBagConstraints gbc_Department = new GridBagConstraints();
		gbc_Department.insets = new Insets(0, 0, 5, 5);
		gbc_Department.gridx = 3;
		gbc_Department.gridy = 4;
		Appointment1.add(Department, gbc_Department);
		
		JLabel AppointmentTypeLabel = new JLabel("Appointment Type:");
		GridBagConstraints gbc_AppointmentTypeLabel = new GridBagConstraints();
		gbc_AppointmentTypeLabel.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentTypeLabel.gridx = 1;
		gbc_AppointmentTypeLabel.gridy = 5;
		Appointment1.add(AppointmentTypeLabel, gbc_AppointmentTypeLabel);
		
		JLabel AppointmentType = new JLabel("Follow Up");
		GridBagConstraints gbc_AppointmentType = new GridBagConstraints();
		gbc_AppointmentType.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentType.gridx = 3;
		gbc_AppointmentType.gridy = 5;
		Appointment1.add(AppointmentType, gbc_AppointmentType);
		
		JButton CancelButton = new JButton("Cancel");
		
		//handler for cancel button of the first appointment in display
		//TO DO: implement the removal
		CancelButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent e) {  
				
			}
		});
		GridBagConstraints gbc_CancelButton = new GridBagConstraints();
		gbc_CancelButton.insets = new Insets(0, 0, 0, 5);
		gbc_CancelButton.gridx = 3;
		gbc_CancelButton.gridy = 6;
		Appointment1.add(CancelButton, gbc_CancelButton);
		
		JPanel Appointment2 = new JPanel();
		Appointment2.setBounds(123, 219, 347, 172);
		contentPane.add(Appointment2);
		GridBagLayout gbl_Appointment2 = new GridBagLayout();
		gbl_Appointment2.columnWidths = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		gbl_Appointment2.rowHeights = new int[]{0, 0, 0, 0, 0, 0, 0, 0};
		gbl_Appointment2.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_Appointment2.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		Appointment2.setLayout(gbl_Appointment2);
		
		JLabel PatientNameLabel2 = new JLabel("Patient:");
		GridBagConstraints gbc_PatientNameLabel2 = new GridBagConstraints();
		gbc_PatientNameLabel2.insets = new Insets(0, 0, 5, 5);
		gbc_PatientNameLabel2.gridx = 1;
		gbc_PatientNameLabel2.gridy = 1;
		Appointment2.add(PatientNameLabel2, gbc_PatientNameLabel2);
		
		JLabel PatientName2 = new JLabel("Sohaib Bajwa");
		GridBagConstraints gbc_PatientName2 = new GridBagConstraints();
		gbc_PatientName2.insets = new Insets(0, 0, 5, 5);
		gbc_PatientName2.gridx = 3;
		gbc_PatientName2.gridy = 1;
		Appointment2.add(PatientName2, gbc_PatientName2);
		
		JLabel AppointmentDateLabel2 = new JLabel("Date:");
		GridBagConstraints gbc_AppointmentDateLabel2 = new GridBagConstraints();
		gbc_AppointmentDateLabel2.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentDateLabel2.gridx = 1;
		gbc_AppointmentDateLabel2.gridy = 2;
		Appointment2.add(AppointmentDateLabel2, gbc_AppointmentDateLabel2);
		
		JLabel AppointmentDate2 = new JLabel("03/03/03");
		GridBagConstraints gbc_AppointmentDate2 = new GridBagConstraints();
		gbc_AppointmentDate2.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentDate2.gridx = 3;
		gbc_AppointmentDate2.gridy = 2;
		Appointment2.add(AppointmentDate2, gbc_AppointmentDate2);
		
		JLabel AppointmentTimeLabel2 = new JLabel("Time:");
		GridBagConstraints gbc_AppointmentTimeLabel2 = new GridBagConstraints();
		gbc_AppointmentTimeLabel2.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentTimeLabel2.gridx = 1;
		gbc_AppointmentTimeLabel2.gridy = 3;
		Appointment2.add(AppointmentTimeLabel2, gbc_AppointmentTimeLabel2);
		
		JLabel AppointmentTime2 = new JLabel("10:20-10:40");
		GridBagConstraints gbc_AppointmentTime2 = new GridBagConstraints();
		gbc_AppointmentTime2.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentTime2.gridx = 3;
		gbc_AppointmentTime2.gridy = 3;
		Appointment2.add(AppointmentTime2, gbc_AppointmentTime2);
		
		JLabel DepartmentLabel2 = new JLabel("Department:");
		GridBagConstraints gbc_DepartmentLabel2 = new GridBagConstraints();
		gbc_DepartmentLabel2.insets = new Insets(0, 0, 5, 5);
		gbc_DepartmentLabel2.gridx = 1;
		gbc_DepartmentLabel2.gridy = 4;
		Appointment2.add(DepartmentLabel2, gbc_DepartmentLabel2);
		
		JLabel Department2 = new JLabel("Cardiology");
		GridBagConstraints gbc_Department2 = new GridBagConstraints();
		gbc_Department2.insets = new Insets(0, 0, 5, 5);
		gbc_Department2.gridx = 3;
		gbc_Department2.gridy = 4;
		Appointment2.add(Department2, gbc_Department2);
		
		JLabel AppointmentTypeLabel2 = new JLabel("Appointment Type:");
		GridBagConstraints gbc_AppointmentTypeLabel2 = new GridBagConstraints();
		gbc_AppointmentTypeLabel2.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentTypeLabel2.gridx = 1;
		gbc_AppointmentTypeLabel2.gridy = 5;
		Appointment2.add(AppointmentTypeLabel2, gbc_AppointmentTypeLabel2);
		
		JLabel AppointmentType2 = new JLabel("Follow Up");
		GridBagConstraints gbc_AppointmentType2 = new GridBagConstraints();
		gbc_AppointmentType2.insets = new Insets(0, 0, 5, 5);
		gbc_AppointmentType2.gridx = 3;
		gbc_AppointmentType2.gridy = 5;
		Appointment2.add(AppointmentType2, gbc_AppointmentType2);
		
		JButton CancelButton2 = new JButton("Cancel");
		GridBagConstraints gbc_CancelButton2 = new GridBagConstraints();
		gbc_CancelButton2.insets = new Insets(0, 0, 0, 5);
		gbc_CancelButton2.gridx = 3;
		gbc_CancelButton2.gridy = 6;
		Appointment2.add(CancelButton2, gbc_CancelButton2);
		
		JButton PreviousButton = new JButton("Previous");
		PreviousButton.setBounds(10, 441, 89, 23);
		contentPane.add(PreviousButton);
		
		JButton NextButton = new JButton("Next");
		NextButton.setBounds(472, 441, 89, 23);
		contentPane.add(NextButton);
		
		JButton ReturnToMainButton = new JButton("X");
		ReturnToMainButton.addMouseListener(new MouseAdapter() {
			@Override
			
			//This event handler corresponds to the button that leads the user back to their main menu, from where they may perform another
			//action
			public void mousePressed(MouseEvent e) {
				DoctorPerspective nextPane = new DoctorPerspective();
				nextPane.setVisible(true);
			}
		});
		ReturnToMainButton.setBounds(507, 7, 54, 23);
		contentPane.add(ReturnToMainButton);
		
		
		//Here we hide the appointments should the doctor have none
		if(accountJSON['doctor'][ID]['appointments'].size()  == 0) {
			Appointment1.setVisible(false);
			Appointment2.setVisible(false);
		}
		//the doctor has a single appointment, so a single appointment will be displayed
		else if (accountJSON['doctor'][ID]['appointments'].size()  == 1){
			Appointment2.setVisible(false);
			
		//below we change the information in the panel in accordance to the appointment in display
			//find the appointment, and find its id
			private JSONArray aptments = accountJSON['doctor'][ID]['appointments']
			private int aptID = aptments[0];
			
			//find patient ID in apt JSON
			private JSONObject aptJSON = new JSONObject(ADDRESS);
			private String patientID = aptJSON['appointments'][aptID]['patientID'];
			
			//set department, time, apt type, and date from apt
			AppointmentTime.setText(aptJSON['appointments'][aptID]['time']);
			Department.setText(aptJSON['appointments'][aptID]['department']);
			AppointmentDate.setText(aptJSON['appointments'][aptID]['date']);
			AppointmentType.setText(aptJSON['appointments'][aptID]['type']);
			
			//find patient name
			PatientName.setText(accountJSON['patients'][patientID]['first_name'] + " " + accountJSON['patients'][patientID]['last_name']);
		}
		else {
		//display the first appointment
			//find the appointment, and find its id
			private JSONArray aptments = accountJSON['doctor'][ID]['appointments']
			private int aptID = aptments[0];
			
			//find patient ID in apt JSON
			private JSONObject aptJSON = new JSONObject(ADDRESS);
			private String patientID = aptJSON['appointments'][aptID]['patientID'];
			
			//set department, time, apt type, and date from apt
			AppointmentTime.setText(aptJSON['appointments'][aptID]['time']);
			Department.setText(aptJSON['appointments'][aptID]['department']);
			AppointmentDate.setText(aptJSON['appointments'][aptID]['date']);
			AppointmentType.setText(aptJSON['appointments'][aptID]['type']);
			
			//find patient name
			PatientName.setText(accountJSON['patients'][patientID]['first_name'] + " " + accountJSON['patients'][patientID]['last_name']);
			
		//display the second appointment
			aptID = aptments[1];
			patientID = aptJSON['appointments'][aptID]['patientID'];
			//change the information in accordance to the second appointment
			AppointmentTime.setText(aptJSON['appointments'][aptID]['time']);
			Department.setText(aptJSON['appointments'][aptID]['department']);
			AppointmentDate.setText(aptJSON['appointments'][aptID]['date']);
			AppointmentType.setText(aptJSON['appointments'][aptID]['type']);
			PatientName.setText(accountJSON['patients'][patientID]['first_name'] + " " + accountJSON['patients'][patientID]['last_name']);
			
	}
}
